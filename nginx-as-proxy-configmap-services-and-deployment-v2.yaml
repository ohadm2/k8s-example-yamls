---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-proxy-conf
  namespace: intezer-protect
data:
  nginx.conf: |
  
    #user  nginx;
    worker_processes  auto;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/log/nginx/nginx.pid;


    events {
        worker_connections  1024;
    }


    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;
        
        log_format custom escape=none '[$time_local] $request \n$request_body';
    
        access_log  /var/log/nginx/postdata.log custom;
        
        server {
             listen 80;
             
             # dns resolver used by forward proxying
             resolver                       8.8.8.8;

             # forward proxy for CONNECT request
             proxy_connect;
             proxy_connect_allow            all;
             proxy_connect_address          192.168.1.1:80;
             #proxy_connect_bind             $remote_addr transparent;
             proxy_connect_connect_timeout  10s;
             proxy_connect_read_timeout     10s;
             proxy_connect_send_timeout     10s;

             location / {
                  proxy_set_header        Host $host;
                  proxy_set_header        X-Real-IP $remote_addr;
                  proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header        X-Forwarded-Proto $scheme;

                  # forward proxy for non-CONNECT request
                  proxy_pass          http://192.168.1.1:80;
                  proxy_read_timeout  90;

                  proxy_redirect      off;
             }
        }

        server {
            listen 443 ssl;
            server_name intezer-protect.proxy.local;

            ssl_certificate           /etc/nginx/#NginxCertFileNamePrefix#.pem;
            ssl_certificate_key       /etc/nginx/#NginxCertFileNamePrefix#.key;

            ssl_session_cache  builtin:1000  shared:SSL:10m;
            ssl_protocols TLSv1.2;
            ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
            ssl_prefer_server_ciphers on;
            
             # dns resolver used by forward proxying
             resolver                       8.8.8.8;

             # forward proxy for CONNECT request
             proxy_connect;
             proxy_connect_allow            all;
             proxy_connect_address          192.168.1.1:80;
             #proxy_connect_bind             $remote_addr transparent;
             proxy_connect_connect_timeout  10s;
             proxy_connect_read_timeout     10s;
             proxy_connect_send_timeout     10s;

             location / {
                  proxy_set_header        Host $host;
                  proxy_set_header        X-Real-IP $remote_addr;
                  proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header        X-Forwarded-Proto $scheme;

                  # forward proxy for non-CONNECT request
                  proxy_pass          http://192.168.1.1:80;
                  proxy_read_timeout  90;

                  proxy_redirect      off;
             }
        }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-proxy
  namespace: intezer-protect
  labels:
    app: nginx-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-proxy
  template:
    metadata:
      labels:
        app: nginx-proxy
    spec:  
      containers:
      - name: nginx-proxy
        image: nginx:1.18.0-alpine
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
          - name: nginx-config-file
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
      volumes:
      - name: nginx-config-file
        configMap:
          name: nginx-proxy-conf
          items:
          - key: nginx.conf
            path: nginx.conf
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-proxy-clusterip
  namespace: intezer-protect
spec:
  type: ClusterIP
  selector:
    app: nginx-proxy
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
    - name: https
      protocol: TCP
      port: 443
      targetPort: 443
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-proxy
  namespace: intezer-protect
spec:
  type: ExternalName
  externalName: intezer-protect.proxy.local